<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        对应的java代码：UserDao userDao = new UserDaoImpl1();
    -->
    <!--2.org.springframework.context解耦dao层-->
   <!-- <bean id="userDao" class="dao.impl.UserDaoImpl"/>
    <bean id="userDao1" class="dao.impl.UserDaoImpl"/>-->

    <!--3.实例工厂-->
    <!--Factoryl factory1 = new Factory1();
    UserDao userDao = factory.getUserDao();-->
   <!-- <bean id="factory1"  class="factory.Factory1"/>
    <bean id="userDao" factory-bean="factory1" factory-method="getUserDao"/>-->

    <!--4.静态工厂-->
    <!--UserDao userDao=factory2.getUserDao()-->
    <!--<bean id="userDao" class="factory.Factory2" factory-method="getUserDao"  />-->

    <!--5.spring容器管理的对象默认都是单例的。-->
    <!--5.在bean标签中使用scope属性指定对象的存活范围:-->
    <!--5.1.Singleton 测试:默认为Singleton-->
    <!--<bean id="userDao" class="factory.Factory2" factory-method="getUserDao" scope="singleton"/>-->

    <!--5.2.prototype-->
    <!--<bean id="userDao" class="factory.Factory2" factory-method="getUserDao" scope="prototype"/>-->

    <!--6.对象的生命周期：spring可以指定普通方法变为生命周期方法-->
    <!--<bean id="userDao" class="factory.Factory2" factory-method="getUserDao" scope="prototype" init-method="init" destroy-method="destroy"/>-->

    <!--7.对象构造方法注入数据-->
    <!--Date now=new Date();
    UserDao userDao=new UserDaoImpl1(1,now);-->
    <!--Date dte=new Date();-->
    <!--<bean id="now" class="java.util.Date"/>
    <bean id="userDao" class="dao.impl.UserDaoImpl1" >
        <constructor-arg name="id" value="1"/>
        <constructor-arg name="time" ref="now"/>
    </bean>-->

    <!--8.对象set,get方法注入数据-->
    <!--<bean id="now" class="java.util.Date"/>
    <bean id="userDao" class="dao.impl.UserDaoImpl2">
        <property name="time" ref="now"/>
        <property name="id" value="1"/>
    </bean>-->

    <!--9.对象p命名空间注入数据:必须有set方法-->
    <!--<bean id="now" class="java.util.Date"/>
    <bean id="userDao" class="dao.impl.UserDaoImpl2" p:id="1" p:time-ref="now"/>-->

    <!--10.Bean管理之复杂数据注入-->
    <!--private String[] myStr;-->
    <!--private List<String> myList;-->
    <!--private Set<String> mySet ;-->
    <!--private Properties myProp;-->
    <bean id="now" class="java.util.Date"/>

    <bean id="userDao" class="dao.impl.UserDaoImpl2">
        <!--10.1.array注入：private String[] myStr;-->
        <property name="myStr">
            <array>
                <value>b</value>
                <value>c</value>
            </array>
        </property>
        <!--10.2.List注入:private List<String> myList;-->
        <property name="myList">
            <list>
                <value>str1</value>
                <value>str2</value>
            </list>
        </property>
        <!--10.3.Set注入：private Set<String> mySet ;-->
        <property name="mySet">
            <set>
                <value>1</value>
                <value>1</value>
                <value>2</value>
            </set>
        </property>
        <!--10.4.properties:private Properties myProp;-->
        <property name="myProp">
          <props>
              <prop key="key1">v1</prop>
              <prop key="key2">v2</prop>
              <prop key="key3">v3</prop>
          </props>
        </property>
    </bean>


</beans>